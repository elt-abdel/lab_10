{
  "{\"sourceRoot\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\",\"filename\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Users\\Public\\Documents\\GitHub\\lab_10",
      "filename": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Users\\Public\\Documents\\GitHub\\lab_10",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite3\"));\n\nvar _sqlite2 = require(\"sqlite\");\n\nvar _writeuser = _interopRequireDefault(require(\"./libraries/writeuser\"));\n\nvar _trace = require(\"sqlite3/lib/trace\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dbSettings = {\n  filename: './tmp/database.db',\n  driver: _sqlite[\"default\"].Database\n};\nvar app = (0, _express[\"default\"])();\nvar port = process.env.PORT || 3000;\napp.use(_express[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"][\"static\"]('public')); // async function writeUser(username, settings){\n//   const db = await open(settings);\n//   await db.exec(\"CREATE TABLE IF NOT EXISTS user (name)\");\n//   await db.exec(`INSERT INTO user VALUES (\"${username}\")`);\n//   console.log(\"Expected result\", result);\n//   return result;\n// }\n\nfunction processDataForFrontEnd(req, res) {\n  var baseURL = ''; // Enter the URL for the data you would like to retrieve here\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n\n  (0, _nodeFetch[\"default\"])(baseURL).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    console.log(data);\n    res.send({\n      data: data\n    }); // here's where we return data to the front end\n  })[\"catch\"](function (err) {\n    console.log(err);\n    res.redirect('/error');\n  });\n} // Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\n\n\napp.route('/api').get(function (req, res) {\n  // processDataForFrontEnd(req, res)\n  _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return (0, _sqlite2.open)(dbSettings);\n\n          case 2:\n            db = _context.sent;\n            _context.next = 5;\n            return db.all('SELECT * FROM user');\n\n          case 5:\n            result = _context.sent;\n            console.log('Expected result', result);\n            res.json(result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n}).post(function (req, res) {\n  console.log('/api post request', req.body);\n\n  if (!req.body.name) {\n    console.log(req.body);\n    res.status('418').send('something went wrong, additionally i am a teapot');\n  } else {\n    (0, _writeuser[\"default\"])(req.body.name, dbSettings).then(function (result) {\n      console.log(result);\n      res.send('your request was successful'); // simple mode\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }\n});\napp.listen(port, function () {\n  console.log(\"Example app listening on port \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkYlNldHRpbmdzIiwiZmlsZW5hbWUiLCJkcml2ZXIiLCJzcWxpdGUzIiwiRGF0YWJhc2UiLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJleHByZXNzIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInByb2Nlc3NEYXRhRm9yRnJvbnRFbmQiLCJyZXEiLCJyZXMiLCJiYXNlVVJMIiwidGhlbiIsInIiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsInNlbmQiLCJlcnIiLCJyZWRpcmVjdCIsInJvdXRlIiwiZ2V0IiwiZGIiLCJhbGwiLCJyZXN1bHQiLCJwb3N0IiwiYm9keSIsIm5hbWUiLCJzdGF0dXMiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBTUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxRQUFRLEVBQUUsbUJBRE87QUFFakJDLEVBQUFBLE1BQU0sRUFBRUMsbUJBQVFDO0FBRkMsQ0FBbkI7QUFLQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBRUFKLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxvQkFBUUMsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyxvQkFBUUcsSUFBUixFQUFSO0FBQ0FULEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyw4QkFBZSxRQUFmLENBQVIsRSxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVNJLHNCQUFULENBQWdDQyxHQUFoQyxFQUFxQ0MsR0FBckMsRUFBMEM7QUFDeEMsTUFBTUMsT0FBTyxHQUFHLEVBQWhCLENBRHdDLENBQ3BCO0FBRXBCO0FBQ0E7QUFDQTs7QUFDQSw2QkFBTUEsT0FBTixFQUNHQyxJQURILENBQ1EsVUFBQ0MsQ0FBRDtBQUFBLFdBQU9BLENBQUMsQ0FBQ04sSUFBRixFQUFQO0FBQUEsR0FEUixFQUVHSyxJQUZILENBRVEsVUFBQ0UsSUFBRCxFQUFVO0FBQ2RDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixJQUFaO0FBQ0FKLElBQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTO0FBQUVILE1BQUFBLElBQUksRUFBRUE7QUFBUixLQUFULEVBRmMsQ0FFWTtBQUMzQixHQUxILFdBTVMsVUFBQ0ksR0FBRCxFQUFTO0FBQ2RILElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaO0FBQ0FSLElBQUFBLEdBQUcsQ0FBQ1MsUUFBSixDQUFhLFFBQWI7QUFDRCxHQVRIO0FBVUQsQyxDQUVEO0FBQ0E7QUFDQTs7O0FBQ0FyQixHQUFHLENBQ0FzQixLQURILENBQ1MsTUFEVCxFQUVHQyxHQUZILENBRU8sVUFBQ1osR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakI7QUFDQSwwREFBQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNrQixtQkFBS2pCLFVBQUwsQ0FEbEI7O0FBQUE7QUFDTzZCLFlBQUFBLEVBRFA7QUFBQTtBQUFBLG1CQUVzQkEsRUFBRSxDQUFDQyxHQUFILENBQU8sb0JBQVAsQ0FGdEI7O0FBQUE7QUFFT0MsWUFBQUEsTUFGUDtBQUdDVCxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixFQUErQlEsTUFBL0I7QUFDQWQsWUFBQUEsR0FBRyxDQUFDSCxJQUFKLENBQVNpQixNQUFUOztBQUpEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUQ7QUFNRCxDQVZILEVBV0dDLElBWEgsQ0FXUSxVQUFDaEIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEJLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1CQUFaLEVBQWlDUCxHQUFHLENBQUNpQixJQUFyQzs7QUFDQSxNQUFJLENBQUNqQixHQUFHLENBQUNpQixJQUFKLENBQVNDLElBQWQsRUFBb0I7QUFDbEJaLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxHQUFHLENBQUNpQixJQUFoQjtBQUNBaEIsSUFBQUEsR0FBRyxDQUFDa0IsTUFBSixDQUFXLEtBQVgsRUFBa0JYLElBQWxCLENBQXVCLGtEQUF2QjtBQUNELEdBSEQsTUFHTztBQUNMLCtCQUFVUixHQUFHLENBQUNpQixJQUFKLENBQVNDLElBQW5CLEVBQXlCbEMsVUFBekIsRUFDR21CLElBREgsQ0FDUSxVQUFDWSxNQUFELEVBQVk7QUFDaEJULE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxNQUFaO0FBQ0FkLE1BQUFBLEdBQUcsQ0FBQ08sSUFBSixDQUFTLDZCQUFULEVBRmdCLENBRXlCO0FBQzFDLEtBSkgsV0FLUyxVQUFDQyxHQUFELEVBQVM7QUFDZEgsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLEdBQVo7QUFDRCxLQVBIO0FBUUQ7QUFDRixDQTFCSDtBQTRCQXBCLEdBQUcsQ0FBQytCLE1BQUosQ0FBVzlCLElBQVgsRUFBaUIsWUFBTTtBQUNyQmdCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUix5Q0FBNkNqQixJQUE3QztBQUNELENBRkQiLCJzb3VyY2VSb290IjoiRTpcXFVzZXJzXFxQdWJsaWNcXERvY3VtZW50c1xcR2l0SHViXFxsYWJfMTBcXCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZXNlIGFyZSBvdXIgcmVxdWlyZWQgbGlicmFyaWVzIHRvIG1ha2UgdGhlIHNlcnZlciB3b3JrLlxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XG5cbi8vIGNvbnN0IHNxbGl0ZTMgPSByZXF1aXJlKCdzcWxpdGUzJykudmVyYm9zZSgpO1xuLy8gV2UncmUgaW5jbHVkaW5nIGEgc2VydmVyLXNpZGUgdmVyc2lvbiBvZiBTUUxpdGUsIHRoZSBpbi1tZW1vcnkgU1FMIHNlcnZlci5cbi8vIGNvbnN0IG9wZW4gPSByZXF1aXJlKHNxbGl0ZSkub3BlbjsgLy8gV2UncmUgaW5jbHVkaW5nIGEgc2VydmVyLXNpZGUgdmVyc2lvbiBvZiBTUUxpdGUsIHRoZSBpbi1tZW1vcnkgU1FMIHNlcnZlci5cblxuaW1wb3J0IHNxbGl0ZTMgZnJvbSAnc3FsaXRlMyc7XG5pbXBvcnQgeyBvcGVuIH0gZnJvbSAnc3FsaXRlJztcbmltcG9ydCB3cml0ZVVzZXIgZnJvbSAnLi9saWJyYXJpZXMvd3JpdGV1c2VyJztcbmltcG9ydCB7IGV4dGVuZFRyYWNlIH0gZnJvbSAnc3FsaXRlMy9saWIvdHJhY2UnO1xuXG5jb25zdCBkYlNldHRpbmdzID0ge1xuICBmaWxlbmFtZTogJy4vdG1wL2RhdGFiYXNlLmRiJyxcbiAgZHJpdmVyOiBzcWxpdGUzLkRhdGFiYXNlXG59O1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwO1xuXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG4vLyBhc3luYyBmdW5jdGlvbiB3cml0ZVVzZXIodXNlcm5hbWUsIHNldHRpbmdzKXtcbi8vICAgY29uc3QgZGIgPSBhd2FpdCBvcGVuKHNldHRpbmdzKTtcbi8vICAgYXdhaXQgZGIuZXhlYyhcIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHVzZXIgKG5hbWUpXCIpO1xuLy8gICBhd2FpdCBkYi5leGVjKGBJTlNFUlQgSU5UTyB1c2VyIFZBTFVFUyAoXCIke3VzZXJuYW1lfVwiKWApO1xuLy8gICBjb25zb2xlLmxvZyhcIkV4cGVjdGVkIHJlc3VsdFwiLCByZXN1bHQpO1xuLy8gICByZXR1cm4gcmVzdWx0O1xuLy8gfVxuXG5mdW5jdGlvbiBwcm9jZXNzRGF0YUZvckZyb250RW5kKHJlcSwgcmVzKSB7XG4gIGNvbnN0IGJhc2VVUkwgPSAnJzsgLy8gRW50ZXIgdGhlIFVSTCBmb3IgdGhlIGRhdGEgeW91IHdvdWxkIGxpa2UgdG8gcmV0cmlldmUgaGVyZVxuXG4gIC8vIFlvdXIgRmV0Y2ggQVBJIGNhbGwgc3RhcnRzIGhlcmVcbiAgLy8gTm90ZSB0aGF0IGF0IG5vIHBvaW50IGRvIHlvdSBcInJldHVyblwiIGFueXRoaW5nIGZyb20gdGhpcyBmdW5jdGlvbiAtXG4gIC8vIGl0IGluc3RlYWQgaGFuZGxlcyByZXR1cm5pbmcgZGF0YSB0byB5b3VyIGZyb250IGVuZCBhdCBsaW5lIDM0LlxuICBmZXRjaChiYXNlVVJMKVxuICAgIC50aGVuKChyKSA9PiByLmpzb24oKSlcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICByZXMuc2VuZCh7IGRhdGE6IGRhdGEgfSk7IC8vIGhlcmUncyB3aGVyZSB3ZSByZXR1cm4gZGF0YSB0byB0aGUgZnJvbnQgZW5kXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIHJlcy5yZWRpcmVjdCgnL2Vycm9yJyk7XG4gICAgfSk7XG59XG5cbi8vIFN5bnRheCBjaGFuZ2UgLSB3ZSBkb24ndCB3YW50IHRvIHJlcGVhdCBvdXJzZWx2ZXMsXG4vLyBvciB3ZSdsbCBlbmQgdXAgd2l0aCBzcGVsbGluZyBlcnJvcnMgaW4gb3VyIGVuZHBvaW50cy5cbi8vXG5hcHBcbiAgLnJvdXRlKCcvYXBpJylcbiAgLmdldCgocmVxLCByZXMpID0+IHtcbiAgICAvLyBwcm9jZXNzRGF0YUZvckZyb250RW5kKHJlcSwgcmVzKVxuICAgIChhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCBkYiA9IGF3YWl0IG9wZW4oZGJTZXR0aW5ncyk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBkYi5hbGwoJ1NFTEVDVCAqIEZST00gdXNlcicpO1xuICAgICAgY29uc29sZS5sb2coJ0V4cGVjdGVkIHJlc3VsdCcsIHJlc3VsdCk7XG4gICAgICByZXMuanNvbihyZXN1bHQpO1xuICAgIH0pKCk7XG4gIH0pXG4gIC5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnNvbGUubG9nKCcvYXBpIHBvc3QgcmVxdWVzdCcsIHJlcS5ib2R5KTtcbiAgICBpZiAoIXJlcS5ib2R5Lm5hbWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcbiAgICAgIHJlcy5zdGF0dXMoJzQxOCcpLnNlbmQoJ3NvbWV0aGluZyB3ZW50IHdyb25nLCBhZGRpdGlvbmFsbHkgaSBhbSBhIHRlYXBvdCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3cml0ZVVzZXIocmVxLmJvZHkubmFtZSwgZGJTZXR0aW5ncylcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICAgICAgcmVzLnNlbmQoJ3lvdXIgcmVxdWVzdCB3YXMgc3VjY2Vzc2Z1bCcpOyAvLyBzaW1wbGUgbW9kZVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fSFgKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dbSettings",
        "filename",
        "driver",
        "sqlite3",
        "Database",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "processDataForFrontEnd",
        "req",
        "res",
        "baseURL",
        "then",
        "r",
        "data",
        "console",
        "log",
        "send",
        "err",
        "redirect",
        "route",
        "get",
        "db",
        "all",
        "result",
        "post",
        "body",
        "name",
        "status",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,mBADO;AAEjBC,EAAAA,MAAM,EAAEC,mBAAQC;AAFC,CAAnB;AAKA,IAAMC,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAR,GAAG,CAACK,GAAJ,CAAQC,oBAAQG,IAAR,EAAR;AACAT,GAAG,CAACK,GAAJ,CAAQC,8BAAe,QAAf,CAAR,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,sBAAT,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,MAAMC,OAAO,GAAG,EAAhB,CADwC,CACpB;AAEpB;AACA;AACA;;AACA,6BAAMA,OAAN,EACGC,IADH,CACQ,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACN,IAAF,EAAP;AAAA,GADR,EAEGK,IAFH,CAEQ,UAACE,IAAD,EAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,IAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEH,MAAAA,IAAI,EAAEA;AAAR,KAAT,EAFc,CAEY;AAC3B,GALH,WAMS,UAACI,GAAD,EAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAR,IAAAA,GAAG,CAACS,QAAJ,CAAa,QAAb;AACD,GATH;AAUD,C,CAED;AACA;AACA;;;AACArB,GAAG,CACAsB,KADH,CACS,MADT,EAEGC,GAFH,CAEO,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACjB;AACA,0DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACkB,mBAAKjB,UAAL,CADlB;;AAAA;AACO6B,YAAAA,EADP;AAAA;AAAA,mBAEsBA,EAAE,CAACC,GAAH,CAAO,oBAAP,CAFtB;;AAAA;AAEOC,YAAAA,MAFP;AAGCT,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BQ,MAA/B;AACAd,YAAAA,GAAG,CAACH,IAAJ,CAASiB,MAAT;;AAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAMD,CAVH,EAWGC,IAXH,CAWQ,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAClBK,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,GAAG,CAACiB,IAArC;;AACA,MAAI,CAACjB,GAAG,CAACiB,IAAJ,CAASC,IAAd,EAAoB;AAClBZ,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACiB,IAAhB;AACAhB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,KAAX,EAAkBX,IAAlB,CAAuB,kDAAvB;AACD,GAHD,MAGO;AACL,+BAAUR,GAAG,CAACiB,IAAJ,CAASC,IAAnB,EAAyBlC,UAAzB,EACGmB,IADH,CACQ,UAACY,MAAD,EAAY;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACAd,MAAAA,GAAG,CAACO,IAAJ,CAAS,6BAAT,EAFgB,CAEyB;AAC1C,KAJH,WAKS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAPH;AAQD;AACF,CA1BH;AA4BApB,GAAG,CAAC+B,MAAJ,CAAW9B,IAAX,EAAiB,YAAM;AACrBgB,EAAAA,OAAO,CAACC,GAAR,yCAA6CjB,IAA7C;AACD,CAFD",
      "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\",
      "sourcesContent": [
        "// These are our required libraries to make the server work.\nimport express from 'express';\nimport fetch from 'node-fetch';\n\n// const sqlite3 = require('sqlite3').verbose();\n// We're including a server-side version of SQLite, the in-memory SQL server.\n// const open = require(sqlite).open; // We're including a server-side version of SQLite, the in-memory SQL server.\n\nimport sqlite3 from 'sqlite3';\nimport { open } from 'sqlite';\nimport writeUser from './libraries/writeuser';\nimport { extendTrace } from 'sqlite3/lib/trace';\n\nconst dbSettings = {\n  filename: './tmp/database.db',\n  driver: sqlite3.Database\n};\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\napp.use(express.static('public'));\n\n// async function writeUser(username, settings){\n//   const db = await open(settings);\n//   await db.exec(\"CREATE TABLE IF NOT EXISTS user (name)\");\n//   await db.exec(`INSERT INTO user VALUES (\"${username}\")`);\n//   console.log(\"Expected result\", result);\n//   return result;\n// }\n\nfunction processDataForFrontEnd(req, res) {\n  const baseURL = ''; // Enter the URL for the data you would like to retrieve here\n\n  // Your Fetch API call starts here\n  // Note that at no point do you \"return\" anything from this function -\n  // it instead handles returning data to your front end at line 34.\n  fetch(baseURL)\n    .then((r) => r.json())\n    .then((data) => {\n      console.log(data);\n      res.send({ data: data }); // here's where we return data to the front end\n    })\n    .catch((err) => {\n      console.log(err);\n      res.redirect('/error');\n    });\n}\n\n// Syntax change - we don't want to repeat ourselves,\n// or we'll end up with spelling errors in our endpoints.\n//\napp\n  .route('/api')\n  .get((req, res) => {\n    // processDataForFrontEnd(req, res)\n    (async () => {\n      const db = await open(dbSettings);\n      const result = await db.all('SELECT * FROM user');\n      console.log('Expected result', result);\n      res.json(result);\n    })();\n  })\n  .post((req, res) => {\n    console.log('/api post request', req.body);\n    if (!req.body.name) {\n      console.log(req.body);\n      res.status('418').send('something went wrong, additionally i am a teapot');\n    } else {\n      writeUser(req.body.name, dbSettings)\n        .then((result) => {\n          console.log(result);\n          res.send('your request was successful'); // simple mode\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  });\n\napp.listen(port, () => {\n  console.log(`Example app listening on port ${port}!`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587952246285
  },
  "{\"sourceRoot\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\\\\libraries\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\",\"filename\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\\\\libraries\\\\writeuser.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"E:\\\\Users\\\\Public\\\\Documents\\\\GitHub\\\\lab_10\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "E:\\Users\\Public\\Documents\\GitHub\\lab_10",
      "filename": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\writeuser.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "E:\\Users\\Public\\Documents\\GitHub\\lab_10",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\writeuser.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\writeuser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\",
        "sourceFileName": "writeuser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sqlite = _interopRequireDefault(require(\"sqlite3\"));\n\nvar _sqlite2 = require(\"sqlite\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction writeUser(_x, _x2) {\n  return _writeUser.apply(this, arguments);\n}\n\nfunction _writeUser() {\n  _writeUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(username, dbSettings) {\n    var db, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"touched username \".concat(username));\n            _context.next = 3;\n            return (0, _sqlite2.open)(dbSettings);\n\n          case 3:\n            db = _context.sent;\n            _context.next = 6;\n            return db.exec('CREATE TABLE IF NOT EXISTS user (name)');\n\n          case 6:\n            _context.next = 8;\n            return db.exec(\"INSERT INTO user VALUES (\\\"\".concat(username, \"\\\")\"));\n\n          case 8:\n            _context.next = 10;\n            return db.each('SELECT * FROM user', function (err) {\n              console.log('writeuser', err);\n            });\n\n          case 10:\n            result = _context.sent;\n            console.log('Expected result', result);\n            return _context.abrupt(\"return\", result);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _writeUser.apply(this, arguments);\n}\n\nvar _default = writeUser; //   import writeUser from \"./libraries/writeuser\";\n// \n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRldXNlci5qcyJdLCJuYW1lcyI6WyJ3cml0ZVVzZXIiLCJ1c2VybmFtZSIsImRiU2V0dGluZ3MiLCJjb25zb2xlIiwibG9nIiwiZGIiLCJleGVjIiwiZWFjaCIsImVyciIsInJlc3VsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztTQUVlQSxTOzs7Ozt1RUFBZixpQkFBeUJDLFFBQXpCLEVBQW1DQyxVQUFuQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDSUMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLDRCQUFnQ0gsUUFBaEM7QUFESjtBQUFBLG1CQUVxQixtQkFBS0MsVUFBTCxDQUZyQjs7QUFBQTtBQUVVRyxZQUFBQSxFQUZWO0FBQUE7QUFBQSxtQkFHVUEsRUFBRSxDQUFDQyxJQUFILENBQVEsd0NBQVIsQ0FIVjs7QUFBQTtBQUFBO0FBQUEsbUJBSVVELEVBQUUsQ0FBQ0MsSUFBSCxzQ0FBcUNMLFFBQXJDLFNBSlY7O0FBQUE7QUFBQTtBQUFBLG1CQUt5QkksRUFBRSxDQUFDRSxJQUFILENBQVEsb0JBQVIsRUFBOEIsVUFBQ0MsR0FBRCxFQUFTO0FBQ3hETCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBQXlCSSxHQUF6QjtBQUNILGFBRm9CLENBTHpCOztBQUFBO0FBS1VDLFlBQUFBLE1BTFY7QUFRSU4sWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUJBQVosRUFBK0JLLE1BQS9CO0FBUkosNkNBU1dBLE1BVFg7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztlQVllVCxTLEVBRWY7QUFFQSIsInNvdXJjZVJvb3QiOiJFOlxcVXNlcnNcXFB1YmxpY1xcRG9jdW1lbnRzXFxHaXRIdWJcXGxhYl8xMFxcbGlicmFyaWVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3FsaXRlMyBmcm9tICdzcWxpdGUzJztcclxuaW1wb3J0IHsgb3BlbiB9IGZyb20gJ3NxbGl0ZSc7XHJcblxyXG5hc3luYyBmdW5jdGlvbiB3cml0ZVVzZXIodXNlcm5hbWUsIGRiU2V0dGluZ3MpIHtcclxuICAgIGNvbnNvbGUubG9nKGB0b3VjaGVkIHVzZXJuYW1lICR7dXNlcm5hbWV9YCk7XHJcbiAgICBjb25zdCBkYiA9IGF3YWl0IG9wZW4oZGJTZXR0aW5ncylcclxuICAgIGF3YWl0IGRiLmV4ZWMoJ0NSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHVzZXIgKG5hbWUpJyk7XHJcbiAgICBhd2FpdCBkYi5leGVjKGBJTlNFUlQgSU5UTyB1c2VyIFZBTFVFUyAoXCIke3VzZXJuYW1lfVwiKWApO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIuZWFjaCgnU0VMRUNUICogRlJPTSB1c2VyJywgKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd3cml0ZXVzZXInLCBlcnIpO1xyXG4gICAgfSk7XHJcbiAgICBjb25zb2xlLmxvZygnRXhwZWN0ZWQgcmVzdWx0JywgcmVzdWx0KTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIFxyXG5leHBvcnQgZGVmYXVsdCB3cml0ZVVzZXI7XHJcblxyXG4vLyAgIGltcG9ydCB3cml0ZVVzZXIgZnJvbSBcIi4vbGlicmFyaWVzL3dyaXRldXNlclwiO1xyXG5cclxuLy8gIl19",
    "map": {
      "version": 3,
      "sources": [
        "writeuser.js"
      ],
      "names": [
        "writeUser",
        "username",
        "dbSettings",
        "console",
        "log",
        "db",
        "exec",
        "each",
        "err",
        "result"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;SAEeA,S;;;;;uEAAf,iBAAyBC,QAAzB,EAAmCC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,YAAAA,OAAO,CAACC,GAAR,4BAAgCH,QAAhC;AADJ;AAAA,mBAEqB,mBAAKC,UAAL,CAFrB;;AAAA;AAEUG,YAAAA,EAFV;AAAA;AAAA,mBAGUA,EAAE,CAACC,IAAH,CAAQ,wCAAR,CAHV;;AAAA;AAAA;AAAA,mBAIUD,EAAE,CAACC,IAAH,sCAAqCL,QAArC,SAJV;;AAAA;AAAA;AAAA,mBAKyBI,EAAE,CAACE,IAAH,CAAQ,oBAAR,EAA8B,UAACC,GAAD,EAAS;AACxDL,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,GAAzB;AACH,aAFoB,CALzB;;AAAA;AAKUC,YAAAA,MALV;AAQIN,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BK,MAA/B;AARJ,6CASWA,MATX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eAYeT,S,EAEf;AAEA",
      "sourceRoot": "E:\\Users\\Public\\Documents\\GitHub\\lab_10\\libraries\\",
      "sourcesContent": [
        "import sqlite3 from 'sqlite3';\r\nimport { open } from 'sqlite';\r\n\r\nasync function writeUser(username, dbSettings) {\r\n    console.log(`touched username ${username}`);\r\n    const db = await open(dbSettings)\r\n    await db.exec('CREATE TABLE IF NOT EXISTS user (name)');\r\n    await db.exec(`INSERT INTO user VALUES (\"${username}\")`);\r\n    const result = await db.each('SELECT * FROM user', (err) => {\r\n        console.log('writeuser', err);\r\n    });\r\n    console.log('Expected result', result);\r\n    return result;\r\n  }\r\n  \r\nexport default writeUser;\r\n\r\n//   import writeUser from \"./libraries/writeuser\";\r\n\r\n// "
      ]
    },
    "sourceType": "script",
    "mtime": 1587951960756
  }
}